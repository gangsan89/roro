<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:property-placeholder location="classpath:config/jdbc.properties" />
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		p:driverClassName="${jdbc.mysql.driverClassName}"
		p:url="${jdbc.mysql.url}" 
		p:username="${jdbc.mysql.username}"
		p:password="${jdbc.mysql.password}" />
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- definetheSqlSessionFactory -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/my/bit/model/dao/*.xml" />
		<property name="typeAliasesPackage"	value="com.my.bit.model.domain" />
	</bean>
	
	<!-- definetheSqlSessionTemplate --> 
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
		<constructor-arg index="0" ref="sqlSessionFactory" /> 
	</bean>
<!-- 
	<bean id="mapper"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		 <property name="mapperInterface" value="com.bit.mybati.dao.EmpDAO" />
		 <property name="mapperInterface" value="com.bit.mybati.dao.DeptDAO" /> 
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean> -->
	
	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.my.bit.model.dao" />
	</bean>
	
	<!-- 컴포넌트 스캔  -->
	<mybatis-spring:scan base-package="com.my.bit.model.dao" />
	 <context:annotation-config/>
	 
	 
	 <!--  트랜잭션 처리 -->
	 <tx:annotation-driven />
	 
	 	<tx:advice id="txAdvice"
			transaction-manager="transactionManager">
		<tx:attributes>
			<!-- <tx:method name="get*" read-only="true"/> -->
			<tx:method name="insertEmp" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut
			expression="execution(* com.my.bit.model.dao..*(..))"
			id="requiredTx" />
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="requiredTx" />
	</aop:config>
	 
	 
	 
</beans>





